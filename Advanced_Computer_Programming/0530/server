from flask import Flask, request, jsonify, send_file
import numpy as np
import wave
import io
import datetime

app = Flask(__name__)

def generate_sin_wave(frequency, duration, sample_rate=44100):
    t = np.linspace(0, duration, int(sample_rate * duration), endpoint=False)
    audio = (np.sin(2 * np.pi * frequency * t) * 32767).astype(np.int16)

    buffer = io.BytesIO()
    with wave.open(buffer, 'wb') as wf:
        wf.setnchannels(1)
        wf.setsampwidth(2)
        wf.setframerate(sample_rate)
        wf.writeframes(audio.tobytes())

    buffer.seek(0)
    return buffer

@app.route('/generate_wav', methods=['POST'])
def generate_wav():
    try:
        data = request.get_json()
        frequency = data.get("frequency", 440)
        duration = data.get("duration", 1)

        if not (20 <= frequency <= 20000):
            return jsonify({"error": "Frequency must be between 20Hz and 20kHz"}), 400
        if not (0.1 <= duration <= 10):
            return jsonify({"error": "Duration must be between 0.1s and 10s"}), 400

        wav_buffer = generate_sin_wave(frequency, duration)

        response = jsonify({
            "message": "WAV file generated successfully",
            "timestamp": datetime.datetime.now().isoformat(),
            "frequency": frequency,
            "duration": duration,
            "file_url": "/download_wav"
        })

        response.headers["X-WAV-File"] = "generated_sin_wave.wav"

        global last_wav_buffer
        last_wav_buffer = wav_buffer

        return response
    except Exception as e:
        return jsonify({"error": str(e)}), 500

@app.route('/download_wav', methods=['GET'])
def download_wav():
    global last_wav_buffer
    if last_wav_buffer is None:
        return jsonify({"error": "No WAV file generated yet"}), 400
    return send_file(last_wav_buffer, mimetype="audio/wav", as_attachment=True, download_name="generated_sin_wave.wav")

if __name__ == '__main__':
    last_wav_buffer = None
    app.run(host='0.0.0.0', port=5000, debug=True)
